name: ci

on:
  push:
    branches:
      - "main"
  workflow_dispatch:
  schedule:
    - cron:  '0 0 * * 6'

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        javaTag: [
          'graalvm-ce-22.3.0-b2-java17',
          'graalvm-ce-22.3.0-b2-java11',
          'eclipse-temurin-jammy-19.0.1_10',
          'eclipse-temurin-jammy-17.0.5_8',
          'eclipse-temurin-jammy-11.0.17_8',
          'eclipse-temurin-jammy-8u352-b08',
          'eclipse-temurin-focal-17.0.5_8',
          'eclipse-temurin-focal-11.0.17_8',
        ]
        scalaVersion: ['2.12.17', '2.13.10', '3.2.2']
        dockerVersion: [ '24.0.2-cli' ]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Get latest SBT version
        id: get_sbt_version
        run: |
         SBT_VERSION=$(
          curl --silent -L https://github.com/sbt/sbt/releases |
          grep -i -w -o '>[0-9]*\.[0-9]*\.[0-9]*</a>' |
          grep -i -w -o '[0-9]*\.[0-9]*\.[0-9]*' |
          sort --version-sort | tail -n 1)
         [[ -z "$SBT_VERSION" ]] && { echo "Failed to get latest sbt version" ; exit 1; }
         echo ::set-output name=VERSION::$SBT_VERSION
      - name: Create docker tag
        id: create_docker_tag
        run: |
          TAG=sbt-ci-image:${{ matrix.javaTag }}_${{ steps.get_sbt_version.outputs.VERSION }}_${{ matrix.scalaVersion }}_${{ matrix.dockerVersion }}
          echo ::set-output name=TAG::$TAG
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            hnaderi/${{ steps.create_docker_tag.outputs.TAG }}
            ghcr.io/hnaderi/${{ steps.create_docker_tag.outputs.TAG }}
          build-args: |
            SBT_VERSION=${{ steps.get_sbt_version.outputs.VERSION }}
            JAVA_TAG=${{ matrix.javaTag }}
            SCALA_VERSION=${{ matrix.scalaVersion }}
            DOCKER_VERSION=${{ matrix.dockerVersion }}
